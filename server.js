// Generated by CoffeeScript 1.3.1
(function() {
  var app, clientConfig, config, currentFile, emptyGif, events, express, fs, geoip, knox, script, useragent;

  fs = require('fs');

  geoip = require('geoip-lite');

  express = require('express');

  useragent = require('express-useragent');

  knox = require('knox');

  app = express();

  config = require('./config');

  app.use(useragent.express());

  app.use(express.compress());

  app.disable('x-powered-by');

  app.enable('trust proxy');

  emptyGif = Buffer('\x47\x49\x46\x38\x39\x61\x01\
\x00\x01\x00\xf0\x01\x00\xff\xff\xff\x00\x00\x00\
\x21\xf9\x04\x01\x0a\x00\x00\x00\x2c\x00\x00\x00\
\x00\x01\x00\x01\x00\x00\x02\x02\x44\x01\x00\x3b');

  clientConfig = {
    h: 'localhost:9090'
  };

  script = "(function(c) {\n  var initTime = +new Date();\n  window.flextrack = function(a) {\n    if (Object.prototype.toString.call(a) != '[object Object]') return false;\n    a.P_ = document.location.pathname;\n    a.S_ = +new Date() - initTime;\n    a.R_ = document.referrer || 'Direct';\n    var params = [];\n    for (var k in a) params.push(encodeURIComponent(k) + \"=\" + encodeURIComponent(String(a[k])));\n    var i = new Image();\n    i.src = 'http://' + c.h + '/m.gif?' + params.join('&');\n    return true;\n  };\n})(" + (JSON.stringify(clientConfig)) + ");";

  events = [];

  currentFile = null;

  app.get('/script.js', function(req, res) {
    res.set('Content-Type', 'application/javascript');
    res.send(script);
  });

  app.get('/m.gif', function(req, res) {
    var event, file, geo, ip, k, time, ua, v, _ref;
    if (req.xhr) {
      res.send(500);
      return;
    }
    time = (new Date()).toISOString();
    file = 'track-' + time.replace(/:\d\d\.\d\d\dZ$/, '') + '.json';
    console.log(events.length, file);
    if (events.length && currentFile !== file) {
      fs.writeFile("track/" + currentFile, events.join('\n'), function(err) {
        if (err) {
          console.log('Error in write', err);
        } else {
          console.log('File written');
        }
      });
      events = [];
    }
    currentFile = file;
    event = {};
    _ref = req.query;
    for (k in _ref) {
      v = _ref[k];
      if (k === 'P_') {
        k = 'Path';
      }
      if (k === 'R_') {
        k = 'Referrer';
      }
      if (k === 'S_') {
        k = 'SessionLength';
      }
      event[k] = v;
    }
    event['Time'] = time;
    ip = req.ip;
    event['IP'] = ip;
    geo = geoip.lookup(ip) || {
      country: 'NoIP',
      region: 'NoIP',
      city: 'NoIP',
      ll: [0, 0]
    };
    event['Country'] = geo.country || 'N/A';
    event['Region'] = geo.region || 'N/A';
    event['City'] = geo.city || 'N/A';
    event['Lat'] = geo.ll[0];
    event['Lon'] = geo.ll[1];
    ua = req.useragent;
    event['Browser'] = ua.Browser || 'N/A';
    event['BrowserVersion'] = ua.Version || 'N/A';
    event['OS'] = ua.OS || 'N/A';
    event['Platform'] = ua.Platform || 'N/A';
    event['Language'] = req.acceptedLanguages[0] || 'N/A';
    event = JSON.stringify(event);
    console.log("T: " + event);
    events.push(event);
    res.set('Content-Type', 'image/gif');
    res.send(emptyGif);
  });

  app.get('/ping', function(req, res) {
    res.send('pong');
  });

  app.get('/geo', function(req, res) {
    var geo, ip;
    ip = req.ip;
    geo = geoip.lookup(ip) || {
      country: 'NoIP',
      region: 'NoIP',
      city: 'NoIP'
    };
    res.send("IP: " + ip + "\nCountry: " + geo.country + "\nRegion: " + geo.region + "\nCity: " + geo.city + "\nIPs: " + req.ips + "\n\n============================\n\n" + (JSON.stringify(req)));
  });

  console.log("Started server.");

  app.listen(9090);

}).call(this);
